services:
  postgres:
    image: postgres:latest
    hostname: postgres_db
    profiles:
      - dev
    container_name: postgres_db
    environment:
      POSTGRES_DB: reviewsdb
      POSTGRES_USER: ${SPRING_DATASOURCE_USERNAME}
      POSTGRES_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
    ports:
      - "5436:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:latest
    profiles:
      - prod
      - dev
    container_name: redis_cache
    ports:
      - "6379:6379"

  rabbitmq:
    profiles:
      - prod
      - dev
    image: rabbitmq:latest
    container_name: rabbitmq
    hostname: ${PROD_RABBITMQ_HOST}
    ports:
      - "5672:5672"   # AMQP protocol (your app uses this)
      - "15672:15672" # Management UI (browser access)
    environment:
      RABBITMQ_DEFAULT_USER: ${SPRING_DATASOURCE_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${SPRING_DATASOURCE_PASSWORD}

  app:
    build: .
    profiles:
      - prod
    container_name: reviews_api
    ports:
      - "8081:8080"
    depends_on:
      - redis
      - rabbitmq
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://${PROD_DB_HOST}:${PROD_DB_PORT}/${PROD_DB_NAME}
      SPRING_DATASOURCE_USERNAME: ${PROD_DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${PROD_DB_PASSWORD}
      SPRING_REDIS_HOST: redis

volumes:
  pgdata:
